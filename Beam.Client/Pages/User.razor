@page "/User"
@page "/User/{name}"
@layout UserLayout
@inject IDataService data
@using Beam.Shared


<h2>User Rays</h2>
<RadzenTabs>
    <Tabs>
        <RadzenTabsItem Text="List">
            @foreach (var ray in Rays)
            {
                <p>
                    <RayItem ray="@ray" />
                </p>
            }
        </RadzenTabsItem>
        <RadzenTabsItem Text="Grid">
            <RadzenGrid Data="@Rays" TItem="Ray" AllowFiltering="true" AllowPaging="true" PageSize="4" AllowSorting="true">
                <Columns>
                    <RadzenGridColumn TItem="Ray" Property="RayId" Title="Id" />
                    <RadzenGridColumn TItem="Ray" Property="Text" Title="Text" Width="400px" />
                    <RadzenGridColumn TItem="Ray" Property="PrismCount" Title="Times Prismed" />
                    <RadzenGridColumn TItem="Ray" Property="RayCastDate" Title="Date" >
                        <Template Context="item">
                            @item.RayCastDate.ToLocalTime().ToString()
                        </Template>
                    </RadzenGridColumn>
                    <RadzenGridColumn TItem="Ray" Property="UsersPrismed" Sortable="false" Title="Users who Prismed" >
                        <Template Context="item">
                            @foreach(var user in item.UsersPrismed)
                            {
                                <p>@user</p>
                            }
                        </Template>
                    </RadzenGridColumn>
                </Columns>
            </RadzenGrid>
        </RadzenTabsItem>
        <RadzenTabsItem Text="Chart">
            <RadzenChart>
                <RadzenColumnSeries Data="@ChartData" CategoryProperty="Time" ValueProperty="PrismCount" Title="Prism Count" LineType="LineType.Dashed" />
                <RadzenLineSeries Data="@ChartData" CategoryProperty="Time" ValueProperty="TextLength" Title="Text Length" LineType="LineType.Dotted" />
                <RadzenColumnOptions Margin="2" Radius="5" />
                <RadzenValueAxis>
                    <RadzenGridLines Visible="true" />
                    <RadzenAxisTitle Text="Prism Count" />
                </RadzenValueAxis>
                <RadzenCategoryAxis>
                    <RadzenGridLines Visible="true" />
                    <RadzenAxisTitle Text="Ray Id" />
                </RadzenCategoryAxis>
            </RadzenChart>
        </RadzenTabsItem>
    </Tabs>
</RadzenTabs>


@code{
    [Parameter]
    public string Name { get; set; }
    List<Ray> Rays = new List<Ray>();
    List<RayChartData> ChartData = new List<RayChartData>();

    protected override void OnInitialized()
    {
        data.UpdatedRays += async () => 
        {
            Rays = await data.GetUserRays(Name);
            StateHasChanged();    
        };
    }
    protected override async Task OnParametersSetAsync(){
        Rays = await data.GetUserRays(this.Name);
        ChartData = Rays.Select(r => new RayChartData(r)).ToList();
    }

    private class RayChartData
    {
        public int TextLength { get; set; }
        public int PrismCount { get; set; }
        public DateTime Time { get; set; }

        public RayChartData(Ray ray)
        {
            TextLength = ray.Text != null ? ray.Text.Length : 0;
            PrismCount = ray.PrismCount;
            Time = ray.RayCastDate;
        }
    }
}